import { PrimitiveType, ArrayType, BytesType } from '@nexscript/utils';
import { SymbolTable, Symbol } from './SymbolTable.js';
export const NumberUnit = {
    SATOSHIS: 1,
    SATS: 1,
    NEXA: 100,
    MNEXA: 100000000,
    MEX: 100000000,
    SECONDS: 1,
    MINUTES: 60,
    HOURS: 3600,
    DAYS: 86400,
    WEEKS: 604800,
};
export var GlobalFunction;
(function (GlobalFunction) {
    GlobalFunction["ABS"] = "abs";
    GlobalFunction["MIN"] = "min";
    GlobalFunction["MAX"] = "max";
    GlobalFunction["WITHIN"] = "within";
    GlobalFunction["RIPEMD160"] = "ripemd160";
    GlobalFunction["SHA1"] = "sha1";
    GlobalFunction["SHA256"] = "sha256";
    GlobalFunction["HASH160"] = "hash160";
    GlobalFunction["HASH256"] = "hash256";
    GlobalFunction["CHECKSIG"] = "checkSig";
    GlobalFunction["CHECKMULTISIG"] = "checkMultiSig";
    GlobalFunction["CHECKDATASIG"] = "checkDataSig";
    GlobalFunction["GROUP_AMOUNT_IN"] = "tx.groupAmountIn";
    GlobalFunction["GROUP_AMOUNT_OUT"] = "tx.groupAmountOut";
    GlobalFunction["GROUP_COUNT_IN"] = "tx.groupCountIn";
    GlobalFunction["GROUP_COUNT_OUT"] = "tx.groupCountOut";
    GlobalFunction["GROUP_NTH_INPUT"] = "tx.groupNthInput";
    GlobalFunction["GROUP_NTH_OUTPUT"] = "tx.groupNthOutput";
    GlobalFunction["ENCODE_NUMBER"] = "encodeNumber";
    GlobalFunction["ENCODE_DATA"] = "encodeData";
})(GlobalFunction || (GlobalFunction = {}));
export const PushTxStateSpecifierMap = {
    [GlobalFunction.GROUP_AMOUNT_IN]: 0x07,
    [GlobalFunction.GROUP_AMOUNT_OUT]: 0x08,
    [GlobalFunction.GROUP_COUNT_IN]: 0x09,
    [GlobalFunction.GROUP_COUNT_OUT]: 0x0A,
    [GlobalFunction.GROUP_NTH_INPUT]: 0x0B,
    [GlobalFunction.GROUP_NTH_OUTPUT]: 0x0C,
};
export var TimeOp;
(function (TimeOp) {
    TimeOp["CHECK_SEQUENCE"] = "tx.age";
    TimeOp["CHECK_LOCKTIME"] = "tx.time";
})(TimeOp || (TimeOp = {}));
export var Class;
(function (Class) {
    Class["LOCKING_BYTECODE_P2ST"] = "LockingBytecodeP2ST";
    Class["LOCKING_BYTECODE_P2PKT"] = "LockingBytecodeP2PKT";
    Class["LOCKING_BYTECODE_NULLDATA"] = "LockingBytecodeNullData";
})(Class || (Class = {}));
export var Modifier;
(function (Modifier) {
    Modifier["CONSTANT"] = "constant";
})(Modifier || (Modifier = {}));
export const GLOBAL_SYMBOL_TABLE = new SymbolTable();
// Classes
GLOBAL_SYMBOL_TABLE.set(Symbol.class(Class.LOCKING_BYTECODE_P2ST, new BytesType(), [
    new BytesType(20), new BytesType(), new BytesType(),
]));
GLOBAL_SYMBOL_TABLE.set(Symbol.class(Class.LOCKING_BYTECODE_P2PKT, new BytesType(23), [new BytesType(20)]));
GLOBAL_SYMBOL_TABLE.set(Symbol.class(Class.LOCKING_BYTECODE_NULLDATA, new BytesType(), [new ArrayType(new BytesType())]));
// Global functions
GLOBAL_SYMBOL_TABLE.set(Symbol.function(GlobalFunction.ABS, PrimitiveType.INT, [PrimitiveType.INT]));
GLOBAL_SYMBOL_TABLE.set(Symbol.function(GlobalFunction.MIN, PrimitiveType.INT, [PrimitiveType.INT, PrimitiveType.INT]));
GLOBAL_SYMBOL_TABLE.set(Symbol.function(GlobalFunction.MAX, PrimitiveType.INT, [PrimitiveType.INT, PrimitiveType.INT]));
GLOBAL_SYMBOL_TABLE.set(Symbol.function(GlobalFunction.WITHIN, PrimitiveType.BOOL, [PrimitiveType.INT, PrimitiveType.INT, PrimitiveType.INT]));
GLOBAL_SYMBOL_TABLE.set(Symbol.function(GlobalFunction.RIPEMD160, new BytesType(20), [PrimitiveType.ANY]));
GLOBAL_SYMBOL_TABLE.set(Symbol.function(GlobalFunction.SHA1, new BytesType(20), [PrimitiveType.ANY]));
GLOBAL_SYMBOL_TABLE.set(Symbol.function(GlobalFunction.SHA256, new BytesType(32), [PrimitiveType.ANY]));
GLOBAL_SYMBOL_TABLE.set(Symbol.function(GlobalFunction.HASH160, new BytesType(20), [PrimitiveType.ANY]));
GLOBAL_SYMBOL_TABLE.set(Symbol.function(GlobalFunction.HASH256, new BytesType(32), [PrimitiveType.ANY]));
GLOBAL_SYMBOL_TABLE.set(Symbol.function(GlobalFunction.CHECKSIG, PrimitiveType.BOOL, [PrimitiveType.SIG, PrimitiveType.PUBKEY]));
GLOBAL_SYMBOL_TABLE.set(Symbol.function(GlobalFunction.CHECKMULTISIG, PrimitiveType.BOOL, [new ArrayType(PrimitiveType.SIG), new ArrayType(PrimitiveType.PUBKEY)]));
GLOBAL_SYMBOL_TABLE.set(Symbol.function(GlobalFunction.CHECKDATASIG, PrimitiveType.BOOL, [PrimitiveType.DATASIG, new BytesType(), PrimitiveType.PUBKEY]));
GLOBAL_SYMBOL_TABLE.set(Symbol.function(GlobalFunction.GROUP_AMOUNT_IN, PrimitiveType.INT, [new BytesType(32)]));
GLOBAL_SYMBOL_TABLE.set(Symbol.function(GlobalFunction.GROUP_AMOUNT_OUT, PrimitiveType.INT, [new BytesType(32)]));
GLOBAL_SYMBOL_TABLE.set(Symbol.function(GlobalFunction.GROUP_COUNT_IN, PrimitiveType.INT, [new BytesType(32)]));
GLOBAL_SYMBOL_TABLE.set(Symbol.function(GlobalFunction.GROUP_COUNT_OUT, PrimitiveType.INT, [new BytesType(32)]));
GLOBAL_SYMBOL_TABLE.set(Symbol.function(GlobalFunction.GROUP_NTH_INPUT, PrimitiveType.INT, [PrimitiveType.INT, new BytesType(32)]));
GLOBAL_SYMBOL_TABLE.set(Symbol.function(GlobalFunction.GROUP_NTH_OUTPUT, PrimitiveType.INT, [PrimitiveType.INT, new BytesType(32)]));
GLOBAL_SYMBOL_TABLE.set(Symbol.function(GlobalFunction.ENCODE_NUMBER, new BytesType(), [PrimitiveType.INT]));
GLOBAL_SYMBOL_TABLE.set(Symbol.function(GlobalFunction.ENCODE_DATA, new BytesType(), [new BytesType()]));
//# sourceMappingURL=Globals.js.map