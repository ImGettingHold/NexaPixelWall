export declare enum NullaryOperator {
    INPUT_INDEX = "this.activeInputIndex",
    BYTECODE = "this.activeBytecode",
    INPUT_COUNT = "tx.inputs.length",
    OUTPUT_COUNT = "tx.outputs.length",
    VERSION = "tx.version",
    LOCKTIME = "tx.locktime",
    ID = "tx.id",
    IDEM = "tx.idem",
    AMOUNT_IN = "tx.amountIn",
    AMOUNT_OUT = "tx.amountOut"
}
export declare enum UnaryOperator {
    NOT = "!",
    NEGATE = "-",
    SIZE = ".length",
    REVERSE = ".reverse()",
    INPUT_VALUE = "tx.inputs[i].value",
    INPUT_LOCKING_BYTECODE = "tx.inputs[i].lockingBytecode",
    INPUT_OUTPOINT_HASH = "tx.inputs[i].outpointTransactionHash",
    INPUT_OUTPOINT_INDEX = "tx.inputs[i].outpointIndex",
    INPUT_UNLOCKING_BYTECODE = "tx.inputs[i].unlockingBytecode",
    INPUT_SEQUENCE_NUMBER = "tx.inputs[i].sequenceNumber",
    OUTPUT_VALUE = "tx.outputs[i].value",
    OUTPUT_LOCKING_BYTECODE = "tx.outputs[i].lockingBytecode",
    INPUT_TOKEN_GROUP_ID = "tx.inputs[i].tokenGroupId",
    OUTPUT_TOKEN_GROUP_ID = "tx.outputs[i].tokenGroupId",
    INPUT_TOKEN_SUBGROUP_ID = "tx.inputs[i].tokenSubgroupId",
    OUTPUT_TOKEN_SUBGROUP_ID = "tx.outputs[i].tokenSubgroupId",
    INPUT_SUBGROUP_DATA = "tx.inputs[i].subgroupData",
    OUTPUT_SUBGROUP_DATA = "tx.outputs[i].subgroupData",
    INPUT_TOKEN_AMOUNT = "tx.inputs[i].tokenAmount",
    OUTPUT_TOKEN_AMOUNT = "tx.outputs[i].tokenAmount",
    INPUT_VISIBLE_PARAMETERS = "tx.inputs[i].visibleParameters",
    OUTPUT_VISIBLE_PARAMETERS = "tx.outputs[i].visibleParameters"
}
export declare enum BinaryOperator {
    MUL = "*",
    DIV = "/",
    MOD = "%",
    PLUS = "+",
    MINUS = "-",
    LT = "<",
    LE = "<=",
    GT = ">",
    GE = ">=",
    EQ = "==",
    NE = "!=",
    BIT_AND = "&",
    BIT_XOR = "^",
    BIT_OR = "|",
    AND = "&&",
    OR = "||",
    SPLIT = ".split"
}
